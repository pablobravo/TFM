/**
 * generated by Xtext 2.12.0
 */
package org.xtext.dsl.generador.generator;

import com.google.common.collect.Iterables;
import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtext.generator.IFileSystemAccess;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.eclipse.xtext.xbase.lib.IteratorExtensions;
import org.xtext.dsl.generador.generador.Parafarmacia;
import ws.parafarmacia.webservice.IParafarmaciaWS;
import ws.parafarmacia.webservice.ParafarmaciaWSService;
import ws.parafarmacia.webservice.Producto;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class GeneradorProductosBD {
  private ParafarmaciaWSService servicio;
  
  private IParafarmaciaWS parafarmacia;
  
  private Producto producto;
  
  private Resource resource;
  
  public GeneradorProductosBD(final Resource resource, final IFileSystemAccess fsa) {
    this.resource = resource;
  }
  
  public void compilar() {
    Iterable<Parafarmacia> _filter = Iterables.<Parafarmacia>filter(IteratorExtensions.<EObject>toIterable(this.resource.getAllContents()), Parafarmacia.class);
    for (final Parafarmacia r : _filter) {
      this.doGenerate(r);
    }
  }
  
  public void doGenerate(final Parafarmacia p) {
    try {
      ParafarmaciaWSService _parafarmaciaWSService = new ParafarmaciaWSService();
      this.servicio = _parafarmaciaWSService;
      this.parafarmacia = this.servicio.getParafarmaciaWSPort();
      this.parafarmacia.removeAllProductos();
      EList<org.xtext.dsl.generador.generador.Producto> _productos = p.getProductos();
      for (final org.xtext.dsl.generador.generador.Producto pr : _productos) {
        {
          Producto _producto = new Producto();
          this.producto = _producto;
          this.producto.setNombre(pr.getNombreProducto());
          this.producto.setDescripcion(pr.getDescripcion());
          this.producto.setPrecio(Double.parseDouble(pr.getPrecio()));
          this.producto.setCantidad(pr.getCantidad());
          boolean _equals = pr.getCategoria().equals("Salud");
          if (_equals) {
            this.producto.setCategoria("SALUD");
          } else {
            boolean _equals_1 = pr.getCategoria().equals("Cosmetica");
            if (_equals_1) {
              this.producto.setCategoria("COSMÉTICA");
            } else {
              boolean _equals_2 = pr.getCategoria().equals("Higiene");
              if (_equals_2) {
                this.producto.setCategoria("HIGIENE");
              } else {
                boolean _equals_3 = pr.getCategoria().equals("Dietetica");
                if (_equals_3) {
                  this.producto.setCategoria("DIETÉTICA");
                } else {
                  this.producto.setCategoria("BEBES");
                }
              }
            }
          }
          this.parafarmacia.newProducto(this.producto);
        }
      }
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
