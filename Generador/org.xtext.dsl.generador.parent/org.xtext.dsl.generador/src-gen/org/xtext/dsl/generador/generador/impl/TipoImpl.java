/**
 * generated by Xtext 2.12.0
 */
package org.xtext.dsl.generador.generador.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.dsl.generador.generador.Desplegable;
import org.xtext.dsl.generador.generador.GeneradorPackage;
import org.xtext.dsl.generador.generador.Permanente;
import org.xtext.dsl.generador.generador.Tipo;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Tipo</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.dsl.generador.generador.impl.TipoImpl#getDesplegable <em>Desplegable</em>}</li>
 *   <li>{@link org.xtext.dsl.generador.generador.impl.TipoImpl#getPermanente <em>Permanente</em>}</li>
 * </ul>
 *
 * @generated
 */
public class TipoImpl extends MinimalEObjectImpl.Container implements Tipo
{
  /**
   * The cached value of the '{@link #getDesplegable() <em>Desplegable</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDesplegable()
   * @generated
   * @ordered
   */
  protected Desplegable desplegable;

  /**
   * The cached value of the '{@link #getPermanente() <em>Permanente</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPermanente()
   * @generated
   * @ordered
   */
  protected Permanente permanente;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected TipoImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return GeneradorPackage.Literals.TIPO;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Desplegable getDesplegable()
  {
    return desplegable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetDesplegable(Desplegable newDesplegable, NotificationChain msgs)
  {
    Desplegable oldDesplegable = desplegable;
    desplegable = newDesplegable;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GeneradorPackage.TIPO__DESPLEGABLE, oldDesplegable, newDesplegable);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDesplegable(Desplegable newDesplegable)
  {
    if (newDesplegable != desplegable)
    {
      NotificationChain msgs = null;
      if (desplegable != null)
        msgs = ((InternalEObject)desplegable).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GeneradorPackage.TIPO__DESPLEGABLE, null, msgs);
      if (newDesplegable != null)
        msgs = ((InternalEObject)newDesplegable).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GeneradorPackage.TIPO__DESPLEGABLE, null, msgs);
      msgs = basicSetDesplegable(newDesplegable, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneradorPackage.TIPO__DESPLEGABLE, newDesplegable, newDesplegable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Permanente getPermanente()
  {
    return permanente;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetPermanente(Permanente newPermanente, NotificationChain msgs)
  {
    Permanente oldPermanente = permanente;
    permanente = newPermanente;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, GeneradorPackage.TIPO__PERMANENTE, oldPermanente, newPermanente);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setPermanente(Permanente newPermanente)
  {
    if (newPermanente != permanente)
    {
      NotificationChain msgs = null;
      if (permanente != null)
        msgs = ((InternalEObject)permanente).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - GeneradorPackage.TIPO__PERMANENTE, null, msgs);
      if (newPermanente != null)
        msgs = ((InternalEObject)newPermanente).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - GeneradorPackage.TIPO__PERMANENTE, null, msgs);
      msgs = basicSetPermanente(newPermanente, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, GeneradorPackage.TIPO__PERMANENTE, newPermanente, newPermanente));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case GeneradorPackage.TIPO__DESPLEGABLE:
        return basicSetDesplegable(null, msgs);
      case GeneradorPackage.TIPO__PERMANENTE:
        return basicSetPermanente(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case GeneradorPackage.TIPO__DESPLEGABLE:
        return getDesplegable();
      case GeneradorPackage.TIPO__PERMANENTE:
        return getPermanente();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case GeneradorPackage.TIPO__DESPLEGABLE:
        setDesplegable((Desplegable)newValue);
        return;
      case GeneradorPackage.TIPO__PERMANENTE:
        setPermanente((Permanente)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case GeneradorPackage.TIPO__DESPLEGABLE:
        setDesplegable((Desplegable)null);
        return;
      case GeneradorPackage.TIPO__PERMANENTE:
        setPermanente((Permanente)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case GeneradorPackage.TIPO__DESPLEGABLE:
        return desplegable != null;
      case GeneradorPackage.TIPO__PERMANENTE:
        return permanente != null;
    }
    return super.eIsSet(featureID);
  }

} //TipoImpl
