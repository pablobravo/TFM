/**
 * generated by Xtext 2.12.0
 */
package org.xtext.dsl.parafarmacia.parafarmacia.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.dsl.parafarmacia.parafarmacia.Apariencia;
import org.xtext.dsl.parafarmacia.parafarmacia.Pagina;
import org.xtext.dsl.parafarmacia.parafarmacia.Parafarmacia;
import org.xtext.dsl.parafarmacia.parafarmacia.ParafarmaciaPackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Parafarmacia</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.dsl.parafarmacia.parafarmacia.impl.ParafarmaciaImpl#getTitulo <em>Titulo</em>}</li>
 *   <li>{@link org.xtext.dsl.parafarmacia.parafarmacia.impl.ParafarmaciaImpl#getDescripcion <em>Descripcion</em>}</li>
 *   <li>{@link org.xtext.dsl.parafarmacia.parafarmacia.impl.ParafarmaciaImpl#getApariencia <em>Apariencia</em>}</li>
 *   <li>{@link org.xtext.dsl.parafarmacia.parafarmacia.impl.ParafarmaciaImpl#getPaginas <em>Paginas</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ParafarmaciaImpl extends MinimalEObjectImpl.Container implements Parafarmacia
{
  /**
   * The default value of the '{@link #getTitulo() <em>Titulo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitulo()
   * @generated
   * @ordered
   */
  protected static final String TITULO_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTitulo() <em>Titulo</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitulo()
   * @generated
   * @ordered
   */
  protected String titulo = TITULO_EDEFAULT;

  /**
   * The default value of the '{@link #getDescripcion() <em>Descripcion</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescripcion()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPCION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescripcion() <em>Descripcion</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescripcion()
   * @generated
   * @ordered
   */
  protected String descripcion = DESCRIPCION_EDEFAULT;

  /**
   * The cached value of the '{@link #getApariencia() <em>Apariencia</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getApariencia()
   * @generated
   * @ordered
   */
  protected Apariencia apariencia;

  /**
   * The cached value of the '{@link #getPaginas() <em>Paginas</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPaginas()
   * @generated
   * @ordered
   */
  protected EList<Pagina> paginas;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ParafarmaciaImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ParafarmaciaPackage.Literals.PARAFARMACIA;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getTitulo()
  {
    return titulo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setTitulo(String newTitulo)
  {
    String oldTitulo = titulo;
    titulo = newTitulo;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ParafarmaciaPackage.PARAFARMACIA__TITULO, oldTitulo, titulo));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getDescripcion()
  {
    return descripcion;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDescripcion(String newDescripcion)
  {
    String oldDescripcion = descripcion;
    descripcion = newDescripcion;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ParafarmaciaPackage.PARAFARMACIA__DESCRIPCION, oldDescripcion, descripcion));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Apariencia getApariencia()
  {
    return apariencia;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetApariencia(Apariencia newApariencia, NotificationChain msgs)
  {
    Apariencia oldApariencia = apariencia;
    apariencia = newApariencia;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ParafarmaciaPackage.PARAFARMACIA__APARIENCIA, oldApariencia, newApariencia);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setApariencia(Apariencia newApariencia)
  {
    if (newApariencia != apariencia)
    {
      NotificationChain msgs = null;
      if (apariencia != null)
        msgs = ((InternalEObject)apariencia).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ParafarmaciaPackage.PARAFARMACIA__APARIENCIA, null, msgs);
      if (newApariencia != null)
        msgs = ((InternalEObject)newApariencia).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ParafarmaciaPackage.PARAFARMACIA__APARIENCIA, null, msgs);
      msgs = basicSetApariencia(newApariencia, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ParafarmaciaPackage.PARAFARMACIA__APARIENCIA, newApariencia, newApariencia));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<Pagina> getPaginas()
  {
    if (paginas == null)
    {
      paginas = new EObjectContainmentEList<Pagina>(Pagina.class, this, ParafarmaciaPackage.PARAFARMACIA__PAGINAS);
    }
    return paginas;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ParafarmaciaPackage.PARAFARMACIA__APARIENCIA:
        return basicSetApariencia(null, msgs);
      case ParafarmaciaPackage.PARAFARMACIA__PAGINAS:
        return ((InternalEList<?>)getPaginas()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ParafarmaciaPackage.PARAFARMACIA__TITULO:
        return getTitulo();
      case ParafarmaciaPackage.PARAFARMACIA__DESCRIPCION:
        return getDescripcion();
      case ParafarmaciaPackage.PARAFARMACIA__APARIENCIA:
        return getApariencia();
      case ParafarmaciaPackage.PARAFARMACIA__PAGINAS:
        return getPaginas();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ParafarmaciaPackage.PARAFARMACIA__TITULO:
        setTitulo((String)newValue);
        return;
      case ParafarmaciaPackage.PARAFARMACIA__DESCRIPCION:
        setDescripcion((String)newValue);
        return;
      case ParafarmaciaPackage.PARAFARMACIA__APARIENCIA:
        setApariencia((Apariencia)newValue);
        return;
      case ParafarmaciaPackage.PARAFARMACIA__PAGINAS:
        getPaginas().clear();
        getPaginas().addAll((Collection<? extends Pagina>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ParafarmaciaPackage.PARAFARMACIA__TITULO:
        setTitulo(TITULO_EDEFAULT);
        return;
      case ParafarmaciaPackage.PARAFARMACIA__DESCRIPCION:
        setDescripcion(DESCRIPCION_EDEFAULT);
        return;
      case ParafarmaciaPackage.PARAFARMACIA__APARIENCIA:
        setApariencia((Apariencia)null);
        return;
      case ParafarmaciaPackage.PARAFARMACIA__PAGINAS:
        getPaginas().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ParafarmaciaPackage.PARAFARMACIA__TITULO:
        return TITULO_EDEFAULT == null ? titulo != null : !TITULO_EDEFAULT.equals(titulo);
      case ParafarmaciaPackage.PARAFARMACIA__DESCRIPCION:
        return DESCRIPCION_EDEFAULT == null ? descripcion != null : !DESCRIPCION_EDEFAULT.equals(descripcion);
      case ParafarmaciaPackage.PARAFARMACIA__APARIENCIA:
        return apariencia != null;
      case ParafarmaciaPackage.PARAFARMACIA__PAGINAS:
        return paginas != null && !paginas.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (titulo: ");
    result.append(titulo);
    result.append(", descripcion: ");
    result.append(descripcion);
    result.append(')');
    return result.toString();
  }

} //ParafarmaciaImpl
